// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int                  @id @default(autoincrement())
  name               String
  email              String
  password           String
  created_at         DateTime             @default(now())
  updated_at         DateTime?
  deleted_at         DateTime?
  is_active          Boolean              @default(true)
  transaction        Transaction[]
  bill               Bill[]
  transactionHistory TransactionHistory[]
}

model Transaction {
  id                 Int                  @id @default(autoincrement())
  user               User                 @relation(fields: [user_id], references: [id])
  user_id            Int
  description        String
  value              Int
  category           String
  made_in            DateTime
  type               transaction_type
  transactionHistory TransactionHistory[]
}

model Bill {
  id          Int        @id @default(autoincrement())
  user        User       @relation(fields: [user_id], references: [id])
  user_id     Int
  description String
  amount      Int
  due_date    DateTime
  status      bill_types @default(pending)
}

model TransactionHistory {
  id               Int              @id @default(autoincrement())
  transferred_in   DateTime
  transaction      Transaction      @relation(fields: [transaction_id], references: [id])
  transaction_id   Int
  transaction_type transaction_type
  user             User             @relation(fields: [created_by], references: [id])
  created_by       Int
  updated_at       DateTime?
}

enum transaction_type {
  entry
  exit
}

enum bill_types {
  paid
  overdue
  pending
}
